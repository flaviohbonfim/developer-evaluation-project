services:
  ambev.developerevaluation.webapi:
    container_name: ambev_developer_evaluation_webapi
    image: ${DOCKER_REGISTRY-}ambevdeveloperevaluationwebapi
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__DefaultConnection=Server=ambev.developerevaluation.database;Port=5432;Database=developer_evaluation;User Id=developer;Password=ev@luAt10n
      - RabbitMQ__Host=ambev.developerevaluation.messagebus
      - RabbitMQ__Username=developer
      - RabbitMQ__Password=ev@luAt10n
    depends_on:
      ambev.developerevaluation.database:
        condition: service_healthy
      ambev.developerevaluation.messagebus:
        condition: service_healthy

  ambev.developerevaluation.database:
    container_name: ambev_developer_evaluation_database
    image: postgres:latest
    environment:
      POSTGRES_DB: developer_evaluation
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: ev@luAt10n
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d developer_evaluation"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  dpkeys:
  pgdata: